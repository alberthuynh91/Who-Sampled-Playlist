/* eslint-disable */

import React from 'react';
import { Jumbotron, Grid, Row, Col } from 'react-bootstrap';
import axios from 'axios';

class HomePage extends React.Component {

  constructor(props) {
    super(props);
    this.state = {
      value: '',
      artist: {},
      tracks: [],
      uris: [],
      currentPlaylist: {},
      userId: null,
      artistImage: null
    };
  }

  componentWillMount() {
    localStorage.setItem('accessToken', this.props.location.query.access_token);
    localStorage.setItem('refreshToken', this.props.location.query.refresh_token);
  }

  getUserPlaylists() {
    const at = localStorage.getItem('accessToken');
    console.log('attempting to get user playlists w/: ', at);
    
    axios.get('https://api.spotify.com/v1/me/playlists', {
      dataType: 'json',
      headers: {
          'Authorization': 'Bearer ' + at
      }})
      .then(response => {
      console.log('what is response from login: ', response);
      // dispatch({ type: AUTH_USER });
      // window.location.href = CLIENT_ROOT_URL + '/dashboard';
    })
    .catch((error) => {
      console.log('error getting plalist: ', error);
      errorHandler(dispatch, error.response, AUTH_ERROR)
    });
  }

  updateInput(value) {
    this.setState({ value });
  }

  handleSubmit() {
    console.log(`submitting with: `, this.state.value);
    // Hit api with artist value that returns list of sampled artist
    if (this.state.value === `k` || this.state.value === 'kanye west' || this.state.value === 'kanye') {
      console.log(`hey its kanye west`);
      const at = localStorage.getItem('accessToken');
      // Returned from api w/ kanye west
      const sampledArtists = [`Labi Siffree`, `Otis Redding`];
      // Hit spotify api to get top 5 songs for each artist and display in a list
      axios.get('https://api.spotify.com/v1/search?q=otis%20redding&type=artist', {
        dataType: 'json',
        headers: {
            'Authorization': 'Bearer ' + at
        }
      })
      .then(response => {
        console.log(`what did i get from search????? : `, response);
        const artistID = response.data.artists.items[0].id;
        this.setState({ artist: response.data.artists.items[0] });
        this.setState({ artistImage: response.data.artists.items[0].images[0] });
        axios.get('https://api.spotify.com/v1/artists/' + artistID + '/top-tracks?country=SE', {
          dataType: 'json',
          headers: {
              'Authorization': 'Bearer ' + at
          }
        })
        .then(response => {
          console.log(`what is artist top tracks: `, response);
          this.setState({ tracks: response.data.tracks });
          const uris = response.data.tracks.map((track) => {
            return track.uri;
          });
          console.log(`what is uris in the response: `, uris);
          this.setState({ uris });
        });
      });
    }
  }

  createTracksTable() {
    const { tracks, artistImage } = this.state;
    const imageUrl = "https://images-na.ssl-images-amazon.com/images/I/51-bwSpnV%2BL._SX355_.jpg";
    if (tracks.length > 0) {
      const trackItems = tracks.map((track, i) => {
        console.log(`what is track: `, track);
        const index = i + 1;
        return (
          <tr>
            <td><img src={imageUrl} height="60px" /></td>
            <td>{index}</td>
            <td>{track.artists[0].name}</td>
            <td>{track.name}</td>
          </tr>
        );
      });
      return (
        <div>
          <h3>Songs Sampled by Kanye West</h3>
          <table className="table table-striped hover">
            <thead>
              <tr>
                <th scope="col"></th>
                <th scope="col">#</th>
                <th scope="col">Artist</th>
                <th scope="col">Song Name</th>
              </tr>
            </thead>
            <tbody>
              {trackItems}
            </tbody>
          </table>
        </div>
      );
    }
  }

  createPlaylist() {
    const at = localStorage.getItem('accessToken');
    const data = {
      "description": "New playlist description",
      "public": true,
      "name": "A Playlist Curated by wavyberts app",
      "description": "A playlist of songs sampled by kanye west. This playlist was generated by albert huynh's app"
    }

    axios.post('https://api.spotify.com/v1/users/121636440/playlists', data, {
      headers: {
        'Authorization': 'Bearer ' + at,
        'Content-Type': 'application/json'
      }
    })
    .then(response => {
      console.log('creating playlist ok?? : ', response);
      this.setState({ currentPlaylist: response.data.id });
    });
  }

  addTracksToPlaylist() {
    const at = localStorage.getItem('accessToken');
    const { currentPlaylist, uris } = this.state;
    console.log(`what are the URIS? : `, uris);
    const data = {
      "uris": uris
    }
    axios.post('https://api.spotify.com/v1/users/121636440/playlists/' + currentPlaylist + '/tracks', data, {
      headers: {
        'Authorization': 'Bearer ' + at,
        'Content-Type': 'application/json'
      }
    })
    .then(response => {
      console.log('adding tracks to playlist ok?? : ', response);
    });
  }

  createAndSave() {
    const at = localStorage.getItem('accessToken');
    const data = {
      "description": "New playlist description",
      "public": true,
      "name": "A Playlist Curated by wavyberts app",
      "description": "A playlist of songs sampled by kanye west. This playlist was generated by albert huynh's app"
    }

    axios.post('https://api.spotify.com/v1/users/121636440/playlists', data, {
      headers: {
        'Authorization': 'Bearer ' + at,
        'Content-Type': 'application/json'
      }
    })
    .then(response => {
      console.log('creating playlist ok?? : ', response);
      this.setState({ currentPlaylist: response.data.id });
      this.addTracksToPlaylist();
    });
  }

  render() {
    console.log(`what is state in home page: `, this.state)
    console.log(`what is state in home page: `, this.props)
    return (
      <div>
        <Grid>
          <Row >
            <Col>
              <Jumbotron>
                <h2>Create your playlist</h2>
                <button className="btn btn-secondary" onClick={() => this.getUserPlaylists()}>Get Playlists</button>
                <h3>Search for an artist</h3>
                <input value={this.state.value} type="text" onChange={(event) => this.updateInput(event.target.value)} />
                <button className="btn btn-primary" onClick={() => this.handleSubmit()}>Submit</button>
              </Jumbotron>
              <div>
                {this.createTracksTable()}
              </div>
              <br />
              <div>
                <button className="btn btn-success" onClick={() => this.createAndSave()}>Create Playlist w/ New Tracks</button>
              </div>
            </Col>
          </Row>
        </Grid>
      </div>
    );
  }
}

export default HomePage;
